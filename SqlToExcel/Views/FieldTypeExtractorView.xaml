<Window x:Class="SqlToExcel.Views.FieldTypeExtractorView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="字段类型提取工具" 
        Height="600" 
        Width="800"
        WindowStartupLocation="CenterOwner"
        Icon="/Icon/icon.ico">
    
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    </Window.Resources>
    
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="200" MinHeight="100"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" MinHeight="150"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- 标题和说明 -->
        <StackPanel Grid.Row="0" Margin="0,0,0,10">
            <TextBlock Text="字段类型提取工具" 
                       FontSize="18" 
                       FontWeight="Bold" 
                       Margin="0,0,0,5"/>
            <TextBlock Text="输入JSON格式的表名和字段列表，获取Target数据库中的字段类型信息" 
                       Foreground="Gray"/>
        </StackPanel>

        <!-- JSON输入标签 -->
        <TextBlock Grid.Row="1" 
                   Text="JSON输入 (格式: {&quot;table&quot;: &quot;表名&quot;, &quot;fields&quot;: [&quot;字段1&quot;, &quot;字段2&quot;]})" 
                   Margin="0,0,0,5"/>

        <!-- JSON输入区域 -->
        <Border Grid.Row="2" 
                BorderBrush="LightGray" 
                BorderThickness="1" 
                Margin="0,0,0,10">
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <TextBox Name="JsonInputTextBox"
                         Text="{Binding JsonInput, UpdateSourceTrigger=PropertyChanged}"
                         AcceptsReturn="True"
                         AcceptsTab="True"
                         FontFamily="Consolas"
                         FontSize="12"
                         Padding="5"
                         BorderThickness="0"
                         VerticalAlignment="Stretch"
                         HorizontalAlignment="Stretch"/>
            </ScrollViewer>
        </Border>

        <!-- 按钮区域 -->
        <StackPanel Grid.Row="3" 
                    Orientation="Horizontal" 
                    Margin="0,0,0,10">
            <Button Content="获取字段类型" 
                    Command="{Binding ExtractFieldTypesCommand}"
                    IsEnabled="{Binding IsProcessing, Converter={StaticResource BoolToZeroOneConverter}}"
                    Width="120" 
                    Height="30" 
                    Margin="0,0,10,0">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#007ACC"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#005A9E"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            
            <Button Content="复制到剪贴板" 
                    Command="{Binding CopyToClipboardCommand}"
                    Width="120" 
                    Height="30" 
                    Margin="0,0,10,0">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#28A745"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#218838"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="LightGray"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            
            <Button Content="清空" 
                    Command="{Binding ClearCommand}"
                    Width="80" 
                    Height="30">
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#6C757D"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Cursor" Value="Hand"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#5A6268"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <!-- 处理中提示 -->
            <ProgressBar IsIndeterminate="True" 
                         Width="100" 
                         Height="20" 
                         Margin="20,0,0,0"
                         Visibility="{Binding IsProcessing, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </StackPanel>

        <!-- 结果显示区域 -->
        <Border Grid.Row="4" 
                BorderBrush="LightGray" 
                BorderThickness="1">
            <DataGrid ItemsSource="{Binding FieldTypes}"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      GridLinesVisibility="Horizontal"
                      HeadersVisibility="Column"
                      AlternatingRowBackground="#F5F5F5"
                      RowHeight="30"
                      ColumnHeaderHeight="35"
                      BorderThickness="0"
                      IsReadOnly="True">
                <DataGrid.Resources>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Background" Value="#E0E0E0"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Height" Value="35"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="BorderBrush" Value="Gray"/>
                        <Setter Property="BorderThickness" Value="0,0,1,1"/>
                    </Style>
                    <Style TargetType="DataGridCell">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Padding" Value="5,0"/>
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#B3D9FF"/>
                                <Setter Property="Foreground" Value="Black"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="字段名" 
                                        Binding="{Binding FieldName}" 
                                        Width="*"
                                        MinWidth="200">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Margin" Value="5,0"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="字段类型" 
                                        Binding="{Binding FieldType}" 
                                        Width="*"
                                        MinWidth="200">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="Margin" Value="5,0"/>
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="字段不存在">
                                        <Setter Property="Foreground" Value="Red"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </Trigger>
                                    <Trigger Property="Text" Value="表不存在">
                                        <Setter Property="Foreground" Value="Red"/>
                                        <Setter Property="FontWeight" Value="Bold"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>

        <!-- 状态栏 -->
        <Border Grid.Row="5" 
                Background="#F0F0F0" 
                BorderBrush="LightGray" 
                BorderThickness="0,1,0,0"
                Margin="-10,10,-10,-10">
            <TextBlock Text="{Binding StatusMessage}" 
                       Margin="10,5"
                       VerticalAlignment="Center"/>
        </Border>
    </Grid>
</Window>